1.	What happens when you initialize a repository? Why do you need to do it?
		This creates a .git sub-directory in the directory in which 'git init' command
		was run. With this initialization, a git repository is created and it becomes
		possible to track versions of the project's files using git.

2.	How is the staging area different from the working directory and the repository? What value do 		you think it offers?
		The staging area serves as an intermediary for the working directory and the repository.
		It's kind of like a playground. Files are added to it from the working directory, before
		they are put (commited) to the repository
3.	How can you use the staging area to make sure you have one commit per logical change?
		With the staging are, it is possible to add one file which contains a logical change,
		then commit just that file with the change.
4.  What are some situations when branches would be helpful in keeping your history organized?
	How would branches help?
		One situation is when an experimental feature is to be implemented. Another is when an attempt
		to fix a bug. With branches, one can work on a separate copy of the project, while having a functional copy.
5.	How do the diagrams help you visualize the branch structure?
		1. By showing the parent of each commit
		2. Shows the last commit that a particular branch has in common with another commit
		3. Can also show unreachable commit(s)
